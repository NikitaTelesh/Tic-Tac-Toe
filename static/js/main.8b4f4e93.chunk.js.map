{"version":3,"sources":["computerAlgorithms.js","Components/Square.jsx","Components/Board.jsx","Icons/man.svg","Components/GameModeBtn.jsx","Icons/computer.svg","Components/FirstStepRight.jsx","index.js"],"names":["winningCombinations","diagonalCombinations","slice","straightCombinations","firstStepAlgorithm","squares","playerGoesFirst","isCenterEmpty","chooseRandomStrategy","getRandomPosition","secondStepAlgorithm","zeroInCenter","xInCenter","isXOnOppositeDiagonals","isXOnSiblingSides","isXOnSideAndOnAngle","isMarkOn","i","length","a","b","c","getPositionNearXOnAngle","getAnglePositionOnFriendlyLine","mark","where","findRepetitionsAlgorithm","computerSymbol","winningPosition","findRepetitions","protectPosition","symbol","calculateDraw","calculateWinner","winnerLine","getRandomInt","min","max","Math","ceil","floor","random","squareNumber","remainder","round","Square","props","className","onClick","value","_g","Board","this","Array","fill","map","square","index","includes","renderSquare","rows","row","startOfRow","endOfRow","React","Component","GameModeBtm","active","text","_excluded","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMan","_ref","svgRef","title","titleId","xmlns","viewBox","ref","id","d","ForwardRef","SvgComputer","FirstStepRight","hide","lock","manFirst","computerFirst","Game","squareOnClick","history","state","stepNumber","GameAlgorithmService","xIsNext","playWithComputer","computerMove","setState","concat","moveRow","moveCol","reverseMoves","reverseListOfMoves","modeBtnOnClick","resetState","resetSquares","localStorageState","JSON","parse","localStorage","getItem","moves","step","move","desc","jumpTo","reverse","winnerMark","draw","localState","stringify","setItem","saveToLocalStorage","current","winnerData","createMoves","status","getStatus","e","list","currentTarget","closest","classList","contains","remove","add","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b4f4e93.chunk.js","sourcesContent":["const winningCombinations = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n];\r\nconst diagonalCombinations = winningCombinations.slice(6);\r\nconst straightCombinations = winningCombinations.slice(0,6);\r\nconst center = 4;\r\n\r\nfunction firstStepAlgorithm(squares, playerGoesFirst){\r\n  const isCenterEmpty = !squares[center];\r\n\r\n  const condition = playerGoesFirst ? isCenterEmpty : chooseRandomStrategy();\r\n\r\n  return condition ? center : getRandomPosition(squares, 'onAngle');\r\n}\r\n\r\nfunction secondStepAlgorithm(squares, playerGoesFirst){\r\n  const zeroInCenter = squares[center] === 'O';\r\n  const xInCenter = squares[center] === 'X';\r\n\r\n  if (playerGoesFirst) {\r\n    if (zeroInCenter) {\r\n      const isXOnOppositeDiagonals = (squares[0] === 'X' && squares[0] === squares[8]) || (squares[2] === 'X' && squares[2] === squares[6]);\r\n      const isXOnSiblingSides = (squares[1] === 'X' && (squares[1] === squares[3] || squares[1] === squares[5])) || (squares[7] === 'X' && (squares[7] === squares[3] || squares[7] === squares[5]));\r\n      const isXOnSideAndOnAngle = isMarkOn(squares, 'X', 'onCenterOfSide') && isMarkOn(squares, 'X', 'onAngle');\r\n\r\n      if (isXOnOppositeDiagonals) {\r\n        return getRandomPosition(squares, 'onSide');\r\n      } else if (isXOnSiblingSides || isXOnSideAndOnAngle) {\r\n        return getPositionNearXOnAngle(squares);\r\n      }\r\n    }\r\n\r\n    return getRandomPosition(squares, 'onAngle');\r\n  }\r\n\r\n  if (!playerGoesFirst) {\r\n    if (xInCenter) {\r\n      return getRandomPosition(squares, 'onAngle');\r\n    }\r\n\r\n    if (!zeroInCenter) {\r\n      const isZeroOnAngle = isMarkOn(squares, 'O', 'onAngle');\r\n\r\n      return isZeroOnAngle ? getRandomPosition(squares, 'onAngle') : getAnglePositionOnFriendlyLine(squares);\r\n    }\r\n\r\n    for(let i = 0; i < diagonalCombinations.length; i ++) {\r\n      const [a, , c] = diagonalCombinations[i];\r\n\r\n      if (squares[a] === 'X' && !squares[c]) {\r\n        return c;\r\n      } else if (squares[c] === 'X' && !squares[a]) {\r\n        return a;\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n\r\nfunction isMarkOn(squares, mark, where) {\r\n  let i = where === 'onAngle' ? 0 : 1;\r\n  let isMarkOn = false;\r\n\r\n  while(i < squares.length) {\r\n    if (squares[i] === mark && i !== center) {\r\n      isMarkOn = true;\r\n      break;\r\n    }\r\n\r\n    i += 2;\r\n  }\r\n\r\n  return isMarkOn;\r\n}\r\n\r\nfunction findRepetitionsAlgorithm(squares, playerGoesFirst){\r\n  const computerSymbol = playerGoesFirst ? 'O' : 'X';\r\n  const playerSymbol = computerSymbol === 'X' ? 'O' : 'X';\r\n\r\n  const winningPosition = findRepetitions(squares, playerSymbol);\r\n  const protectPosition = findRepetitions(squares, computerSymbol);\r\n\r\n  return winningPosition !== null ? winningPosition : protectPosition;\r\n}\r\n\r\nfunction findRepetitions(squares, symbol){\r\n  for (let i = 0; i < winningCombinations.length; i++) {\r\n    const [a, b, c] = winningCombinations[i];\r\n\r\n    const isOppositeSymbolOnLine = (squares[a] === symbol || squares[b] === symbol || squares[c] === symbol);\r\n    if (isOppositeSymbolOnLine) {\r\n      continue;\r\n    }\r\n\r\n    if (squares[a] && squares[a] === squares[b]) {\r\n      return c;\r\n    } else if (squares[b] && squares[b] === squares[c]) {\r\n      return a;\r\n    } else if (squares[a] && squares[a] === squares[c]) {\r\n      return b;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction calculateDraw(squares) {\r\n  for (let i = 0; i < squares.length; i++) {\r\n    if (!squares[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  for (let i = 0; i < winningCombinations.length; i++) {\r\n    const [a, b, c] = winningCombinations[i];\r\n\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      const winnerLine = winningCombinations[i];\r\n      const winnerMark = squares[a];\r\n      return [winnerMark, winnerLine];\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getRandomInt(min = 0, max = 8){\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction getPositionNearXOnAngle(squares) {\r\n  for(let i = 0; i < winningCombinations.length; i++) {\r\n    let [a, b, c] = winningCombinations[i];\r\n\r\n    if (!squares[a] && squares[b] === 'X' && !squares[c]) {\r\n      return chooseRandomStrategy() ? a : c;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getAnglePositionOnFriendlyLine(squares) {\r\n  for(let i = 0; i < straightCombinations.length; i++) {\r\n    const [a, b, c] = straightCombinations[i];\r\n\r\n    if (squares[a] === 'X' && squares[b] !== 'O' && !squares[c]) {\r\n      return c;\r\n    } else if (squares[c] === 'X' && squares[b] !== 'O' && !squares[a]) {\r\n      return a;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getRandomPosition(squares, where){\r\n  let squareNumber = getRandomInt();\r\n\r\n  if (where) {\r\n    const remainder = where === 'onAngle' ? 0 : 1;\r\n\r\n    while((squareNumber % 2 !== remainder) || (squareNumber === center) || squares[squareNumber]) {\r\n      squareNumber = getRandomInt();\r\n    }\r\n  } else {\r\n    while(squares[squareNumber]) {\r\n      squareNumber = getRandomInt();\r\n    }\r\n  }\r\n\r\n  return squareNumber;\r\n}\r\n\r\nfunction chooseRandomStrategy() {\r\n  return Math.round(Math.random());\r\n}\r\n\r\nexport {firstStepAlgorithm, secondStepAlgorithm, getRandomPosition, getAnglePositionOnFriendlyLine, findRepetitionsAlgorithm, calculateDraw, calculateWinner};","export function Square(props){\r\n  return (\r\n    <button className={props.className} onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}","import React from 'react';\r\nimport {Square} from './Square.jsx'\r\n\r\nexport class Board extends React.Component {\r\n  renderSquare(i, className) {\r\n    const handleClick = () => {\r\n      this.props.onClick(i);\r\n    }\r\n\r\n    return (\r\n      <Square\r\n        className={className}\r\n        value={this.props.squares[i]}\r\n        onClick={handleClick}\r\n        key={i}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const squares = Array(9).fill(null).map((square, index) => {\r\n      let className = 'square';\r\n\r\n      const {winnerLine} = this.props;\r\n      if (winnerLine?.includes(index)) {\r\n        className = 'square square-win';\r\n      }\r\n\r\n      return this.renderSquare(index, className);\r\n    });\r\n\r\n    const rows = Array(3).fill(null).map((row, index) => {\r\n      const startOfRow = index*3;\r\n      const endOfRow = startOfRow + 3;\r\n\r\n      return squares.slice(startOfRow, endOfRow);\r\n    });\r\n\r\n    return (\r\n      <div className=\"board-container\">\r\n        {rows.map((row, index) => <div key={index} className=\"board-row\">{row}</div>)}\r\n      </div>\r\n    );\r\n  }\r\n}","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMan(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M421.184,384.96l-81.728-20.437l-6.955-27.819c21.867-21.653,36.843-51.392,41.28-81.899c12.117-3.413,21.504-13.803,23.125-26.837l5.333-42.667c1.131-9.003-1.643-18.112-7.616-24.939c-3.499-4.011-7.915-7.04-12.8-8.896l1.963-40.171l7.979-8c12.011-12.779,21.973-34.688,1.152-66.475C376.917,12.395,349.739,0,312.107,0c-14.848,0-49.024,0-80.853,21.376C140.373,23.275,128,65.493,128,106.667c0,9.579,2.325,31.147,3.861,44.16c-5.483,1.728-10.453,4.928-14.336,9.344c-6.08,6.891-8.896,16.043-7.765,25.152l5.333,42.667c1.749,13.909,12.309,24.853,25.664,27.456c4.416,29.333,18.624,58.112,39.232,79.403l-7.424,29.717l-81.728,20.437C37.333,398.336,0,446.165,0,501.333C0,507.221,4.779,512,10.667,512h490.667c5.888,0,10.667-4.821,10.667-10.709C512,446.165,474.667,398.336,421.184,384.96z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMan);\nexport default __webpack_public_path__ + \"static/media/man.74121e47.svg\";\nexport { ForwardRef as ReactComponent };","export function GameModeBtm(props){\r\n  return (\r\n    <button\r\n      className={`game-mode ${props.active}`}\r\n      onClick={props.onClick}\r\n    >Click to play with {props.text}\r\n    </button>\r\n  )\r\n}","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgComputer(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 85.356 85.356\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.45,57.695v-3.16V35.567V16.599c0-1.736-1.421-3.16-3.16-3.16H11.066c-1.739,0-3.164,1.417-3.164,3.16v18.968v18.968v3.16L0,67.179c0,2.613,2.122,4.738,4.742,4.738h75.872c2.616,0,4.742-2.126,4.742-4.738L77.45,57.695z M49.005,70.342H36.358c-0.437,0-0.791-0.351-0.791-0.791c0-0.44,0.354-0.791,0.791-0.791h12.648c0.433,0,0.791,0.351,0.791,0.791C49.785,69.992,49.438,70.342,49.005,70.342z M29.647,67.182l2.412-2.895h21.233l2.416,2.895H29.647z M73.001,52.104c0,1.525-1.242,2.759-2.756,2.759H15.11c-1.514,0-2.756-1.245-2.756-2.759V19.036c0-1.525,1.242-2.759,2.756-2.759h55.136c1.514,0,2.756,1.242,2.756,2.759C73.001,19.036,73.001,52.104,73.001,52.104z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgComputer);\nexport default __webpack_public_path__ + \"static/media/computer.75fc730c.svg\";\nexport { ForwardRef as ReactComponent };","import {ReactComponent as ManSVG} from '../Icons/man.svg';\r\nimport {ReactComponent as ComputerSVG} from '../Icons/computer.svg';\r\n\r\nexport function FirstStepRight(props){\r\n  return (\r\n    <div className={`first-step ${props.hide} ${props.lock}`}>\r\n      <h3 className=\"first-step__title\">\r\n        Who will go first?\r\n      </h3>\r\n      <div className=\"first-step__btns\">\r\n        <button\r\n          className={`first-step__man-btn ${props.playerGoesFirst ? 'active' : ''}`}\r\n          onClick={props.manFirst}\r\n        >\r\n          <ManSVG />\r\n        </button>\r\n        <button\r\n          className={`first-step__computer-btn ${!props.playerGoesFirst ? 'active' : ''}`}\r\n          onClick={props.computerFirst}\r\n        >\r\n          <ComputerSVG />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as GameAlgorithmService from './computerAlgorithms.js';\r\nimport {Board} from './Components/Board.jsx';\r\nimport {GameModeBtm} from './Components/GameModeBtn.jsx'\r\nimport {FirstStepRight} from './Components/FirstStepRight.jsx'\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        moveRow: null,\r\n        moveCol: null,\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      reverseListOfMoves: false,\r\n      playWithComputer: true,\r\n      playerGoesFirst: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const localStorageState = JSON.parse(localStorage.getItem('state'));\r\n    if (localStorageState) {\r\n      this.setState(localStorageState);\r\n    }\r\n  }\r\n\r\n  squareOnClick = (i) => {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    let squares = current.squares.slice();\r\n\r\n    if (GameAlgorithmService.calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n\r\n    if (this.state.playWithComputer && !GameAlgorithmService.calculateWinner(squares) && !GameAlgorithmService.calculateDraw(squares)) {\r\n      squares = this.computerMove(squares);\r\n    }\r\n\r\n    if (!this.state.playWithComputer) {\r\n      this.setState({\r\n        xIsNext: !this.state.xIsNext,\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares,\r\n        moveRow: Math.ceil((i+1)/3),\r\n        moveCol: (i+1)%3 || 3,\r\n      }]),\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  computerMove(squares){\r\n    const playerGoesFirst = this.state.playerGoesFirst;\r\n    const stepNumber = this.state.stepNumber;\r\n    let squareNumber;\r\n\r\n    if (playerGoesFirst) {\r\n      if (stepNumber === 0) {\r\n        squareNumber = GameAlgorithmService.firstStepAlgorithm(squares, playerGoesFirst);\r\n      } else if (GameAlgorithmService.findRepetitionsAlgorithm(squares, playerGoesFirst) !== null) {\r\n        squareNumber = GameAlgorithmService.findRepetitionsAlgorithm(squares, playerGoesFirst);\r\n      } else if (stepNumber === 1) {\r\n        squareNumber = GameAlgorithmService.secondStepAlgorithm(squares, playerGoesFirst);\r\n      } else {\r\n        squareNumber = GameAlgorithmService.getRandomPosition(squares);\r\n      }\r\n    }\r\n\r\n    if (!playerGoesFirst) {\r\n      if (stepNumber === 0) {\r\n        squareNumber = GameAlgorithmService.secondStepAlgorithm(squares, playerGoesFirst);\r\n      } else if (GameAlgorithmService.findRepetitionsAlgorithm(squares, playerGoesFirst) !== null) {\r\n        squareNumber = GameAlgorithmService.findRepetitionsAlgorithm(squares, playerGoesFirst);\r\n      } else if (stepNumber === 1) {\r\n        squareNumber = GameAlgorithmService.getAnglePositionOnFriendlyLine(squares);\r\n      } else {\r\n        squareNumber = GameAlgorithmService.getRandomPosition(squares);\r\n      }\r\n    }\r\n\r\n    squares[squareNumber] = this.state.xIsNext ? 'O' : 'X';\r\n    return squares;\r\n  }\r\n\r\n  createMoves(history){\r\n    let moves = history.map((step, move) => {\r\n      if(move) {\r\n        const desc = `Go to move #${move}: row(${step.moveRow}) col(${step.moveCol})`;\r\n\r\n        const handleClick = () => {\r\n          this.jumpTo(move);\r\n        }\r\n\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={handleClick} className={this.state.stepNumber === move ? 'active' : ''}>{desc}</button>\r\n          </li>\r\n        );\r\n      }\r\n\r\n      return null;\r\n    });\r\n\r\n    if (this.state.reverseListOfMoves) {\r\n      moves = moves.reverse();\r\n    }\r\n\r\n    return moves;\r\n  }\r\n\r\n  reverseMoves = () => {\r\n    this.setState({reverseListOfMoves: !this.state.reverseListOfMoves});\r\n  }\r\n\r\n  getStatus(winnerMark, draw){\r\n    if (winnerMark) {\r\n      return `Winner: ${winnerMark}`;\r\n    } else if (draw) {\r\n      return 'A draw!';\r\n    } else {\r\n      return `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n    }\r\n  }\r\n\r\n  jumpTo(stepNumber) {\r\n    this.setState({\r\n      stepNumber,\r\n    });\r\n\r\n    if (!this.state.playWithComputer) {\r\n      this.setState({\r\n        xIsNext: (stepNumber % 2) === 0,\r\n      })\r\n    }\r\n  }\r\n\r\n  modeBtnOnClick = () => {\r\n    this.resetState();\r\n    if (!this.state.stepNumber) {\r\n      this.setState({playWithComputer: !this.state.playWithComputer});\r\n    }\r\n  }\r\n\r\n  manFirst = () => {\r\n    this.resetState();\r\n    this.setState({\r\n      playerGoesFirst: true,\r\n      xIsNext: true,\r\n    });\r\n  }\r\n\r\n  computerFirst = () => {\r\n    this.resetState();\r\n\r\n    const squares = this.resetSquares();\r\n    const squareNumber = GameAlgorithmService.firstStepAlgorithm(squares, false);\r\n    squares[squareNumber] = 'X';\r\n\r\n    this.setState({\r\n      history: [{\r\n        squares,\r\n      }],\r\n      playerGoesFirst: false,\r\n      xIsNext: false,\r\n    });\r\n  }\r\n\r\n  resetSquares(){\r\n    return Array(9).fill(null);\r\n  }\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        moveRow: null,\r\n        moveCol: null,\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      playerGoesFirst: true,\r\n    });\r\n  }\r\n\r\n  saveToLocalStorage(){\r\n    const localState = JSON.stringify(this.state);\r\n    localStorage.setItem('state', localState);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.saveToLocalStorage();\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const draw = GameAlgorithmService.calculateDraw(current.squares);\r\n\r\n    const winnerData = GameAlgorithmService.calculateWinner(current.squares);\r\n    let winnerMark, winnerLine;\r\n    if (winnerData) {\r\n      [winnerMark, winnerLine] = winnerData;\r\n    }\r\n\r\n    const moves = this.createMoves(history);\r\n    const status = this.getStatus(winnerMark, draw);\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={this.squareOnClick}\r\n            winnerLine={winnerLine}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div className=\"game-status\">{status}</div>\r\n          <GameModeBtm\r\n            active={!this.state.stepNumber ? 'active' : ''}\r\n            text={this.state.playWithComputer ? 'friend' : 'computer'}\r\n            onClick={this.modeBtnOnClick}\r\n          />\r\n          <FirstStepRight\r\n            lock={!this.state.stepNumber ? '' : 'lock'}\r\n            hide={this.state.playWithComputer ? '' : 'hide'}\r\n            manFirst={this.manFirst}\r\n            computerFirst={this.computerFirst}\r\n            playerGoesFirst={this.state.playerGoesFirst}\r\n          />\r\n          <button\r\n            className={`game-restart ${!this.state.stepNumber ? 'hide' : ''}`}\r\n            onClick={this.resetState}\r\n          >Start new game\r\n          </button>\r\n          <button\r\n            className={`game-reverse ${!this.state.stepNumber ? 'hide' : ''}`}\r\n            onClick={this.reverseMoves}\r\n          >Reverse list\r\n          </button>\r\n          <ol className={`game-list ${!this.state.stepNumber ? 'hide' : ''}`}>\r\n            <li className=\"game-list-toggle\">\r\n              <button\r\n                onClick={(e) => {\r\n                  const list = e.currentTarget.closest('ol');\r\n\r\n                  if (list.classList.contains('open')) {\r\n                    list.classList.remove('open');\r\n                  } else {\r\n                    list.classList.add('open');\r\n                  }\r\n                }}\r\n              >\r\n                List of Moves\r\n              </button>\r\n            </li>\r\n            {moves}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}